//syntax = "proto3";
edition = "2023";

package examplepb.inner;

import "validate/validate.proto";

enum MyEnum {
    a = 0;
    b = 1;
}

message Embedded {}

message Person {
  uint64 id = 1 [(validate.rules).uint64.gt = 999];

  // string email = 2 [(validate.rules).string.email = true];

  // string name = 3 [(validate.rules).string = {
  //   pattern:   "^[A-Za-z]+( [A-Za-z]+)*$",
  //   max_bytes: 256,
  // }];

  Location home = 4 [(validate.rules).message.required = true];

  message Location {
    double lat = 1 [(validate.rules).double = {gte: -90,  lte: 90}];
    double lng = 2 [(validate.rules).double = {gte: -180, lte: 180}];
  }
  uint64 auint64 = 5 [(validate.rules).uint64 = {gt: 999, required: true}];
  int64 aint64 = 6 [(validate.rules).int64 = {gt: 999, required: true}];
  uint32 auint32 = 7 [(validate.rules).uint32 = {gt: 999, required: true}];
  int32 aint32 = 8 [(validate.rules).int32 = {gt: 999, required: true}];
  fixed32 afixed32 = 9 [(validate.rules).fixed32 = {gt: 999, required: true}];
  fixed64 afixed64 = 10 [(validate.rules).fixed64 = {gt: 999, required: true}];
  string astring = 11 [(validate.rules).string = {max_bytes: 999, required: true}];
  bytes abytes = 12 [(validate.rules).bytes = {max_len: 999, required: true}];
  MyEnum aenum = 13 [(validate.rules).enum = {in: [0], required: true}];
  Location amsg = 14 [(validate.rules).message = {required: true, custom: true}];
  repeated Embedded arepeated = 15 [(validate.rules).repeated = {max_items: 5}];
  MyEnum class = 16 [(validate.rules).enum = {required: true}];
  double adouble = 17 [(validate.rules).double = {required:true, gte: 4}];
  double adouble2 = 18 [(validate.rules).double = {gte_expr: "pi"}];
}
