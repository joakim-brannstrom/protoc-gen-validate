// Code generated by protoc-gen-validate
// source: validate/validate.proto
// DO NOT EDIT!!!

#pragma once

#include <algorithm>
#include <string>
#include <unordered_set>
#include <vector>

#include "validate/validate.h"
#include "validate/validate.pb.h"


namespace validate {

using std::string;


extern bool validate(const ::validate::FieldRules& m);
extern bool validate(const ::validate::FieldRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::FloatRules& m);
extern bool validate(const ::validate::FloatRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::DoubleRules& m);
extern bool validate(const ::validate::DoubleRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::Int32Rules& m);
extern bool validate(const ::validate::Int32Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::Int64Rules& m);
extern bool validate(const ::validate::Int64Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::UInt32Rules& m);
extern bool validate(const ::validate::UInt32Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::UInt64Rules& m);
extern bool validate(const ::validate::UInt64Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::SInt32Rules& m);
extern bool validate(const ::validate::SInt32Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::SInt64Rules& m);
extern bool validate(const ::validate::SInt64Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::Fixed32Rules& m);
extern bool validate(const ::validate::Fixed32Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::Fixed64Rules& m);
extern bool validate(const ::validate::Fixed64Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::SFixed32Rules& m);
extern bool validate(const ::validate::SFixed32Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::SFixed64Rules& m);
extern bool validate(const ::validate::SFixed64Rules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::BoolRules& m);
extern bool validate(const ::validate::BoolRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::StringRules& m);
extern bool validate(const ::validate::StringRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::BytesRules& m);
extern bool validate(const ::validate::BytesRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::EnumRules& m);
extern bool validate(const ::validate::EnumRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::MessageRules& m);
extern bool validate(const ::validate::MessageRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::RepeatedRules& m);
extern bool validate(const ::validate::RepeatedRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::MapRules& m);
extern bool validate(const ::validate::MapRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::AnyRules& m);
extern bool validate(const ::validate::AnyRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::DurationRules& m);
extern bool validate(const ::validate::DurationRules& m, pgv::ValidationLog* err);

extern bool validate(const ::validate::TimestampRules& m);
extern bool validate(const ::validate::TimestampRules& m, pgv::ValidationLog* err);


} // namespace


#define X_VALIDATE_VALIDATE(X) \
X(::validate::FieldRules) \
X(::validate::FloatRules) \
X(::validate::DoubleRules) \
X(::validate::Int32Rules) \
X(::validate::Int64Rules) \
X(::validate::UInt32Rules) \
X(::validate::UInt64Rules) \
X(::validate::SInt32Rules) \
X(::validate::SInt64Rules) \
X(::validate::Fixed32Rules) \
X(::validate::Fixed64Rules) \
X(::validate::SFixed32Rules) \
X(::validate::SFixed64Rules) \
X(::validate::BoolRules) \
X(::validate::StringRules) \
X(::validate::BytesRules) \
X(::validate::EnumRules) \
X(::validate::MessageRules) \
X(::validate::RepeatedRules) \
X(::validate::MapRules) \
X(::validate::AnyRules) \
X(::validate::DurationRules) \
X(::validate::TimestampRules) \

